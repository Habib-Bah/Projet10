
package com.opendevup.client2.client2;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BibliotequeVilleWS", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BibliotequeVilleWS {


    /**
     * 
     * @param nomutilisateur
     * @param datedebut
     * @param datefin
     * @param prenom
     * @param titrelivre
     * @param email
     */
    @WebMethod
    @RequestWrapper(localName = "reservation", targetNamespace = "http://service/", className = "client.Reservation")
    @ResponseWrapper(localName = "reservationResponse", targetNamespace = "http://service/", className = "client.ReservationResponse")
    @Action(input = "http://service/BibliotequeVilleWS/reservationRequest", output = "http://service/BibliotequeVilleWS/reservationResponse")
    public void reservation(
        @WebParam(name = "Nomutilisateur", targetNamespace = "")
        String nomutilisateur,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "titrelivre", targetNamespace = "")
        String titrelivre,
        @WebParam(name = "datedebut", targetNamespace = "")
        String datedebut,
        @WebParam(name = "datefin", targetNamespace = "")
        String datefin,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @return
     *     returns java.util.List<client.Livre>
     */
    @WebMethod(operationName = "Listedeslivres")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Listedeslivres", targetNamespace = "http://service/", className = "client.Listedeslivres")
    @ResponseWrapper(localName = "ListedeslivresResponse", targetNamespace = "http://service/", className = "client.ListedeslivresResponse")
    @Action(input = "http://service/BibliotequeVilleWS/ListedeslivresRequest", output = "http://service/BibliotequeVilleWS/ListedeslivresResponse")
    public List<Livre> listedeslivres();

    /**
     * 
     * @param email
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "USerReservation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "USerReservation", targetNamespace = "http://service/", className = "client.USerReservation")
    @ResponseWrapper(localName = "USerReservationResponse", targetNamespace = "http://service/", className = "client.USerReservationResponse")
    @Action(input = "http://service/BibliotequeVilleWS/USerReservationRequest", output = "http://service/BibliotequeVilleWS/USerReservationResponse")
    public List<Object> uSerReservation(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param motdepasse
     * @param nom
     * @param prenom
     * @param email
     */
    @WebMethod
    @RequestWrapper(localName = "inscription", targetNamespace = "http://service/", className = "client.Inscription")
    @ResponseWrapper(localName = "inscriptionResponse", targetNamespace = "http://service/", className = "client.InscriptionResponse")
    @Action(input = "http://service/BibliotequeVilleWS/inscriptionRequest", output = "http://service/BibliotequeVilleWS/inscriptionResponse")
    public void inscription(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "motdepasse", targetNamespace = "")
        String motdepasse);

    /**
     * 
     * @param motdepasse
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexion", targetNamespace = "http://service/", className = "client.Connexion")
    @ResponseWrapper(localName = "connexionResponse", targetNamespace = "http://service/", className = "client.ConnexionResponse")
    @Action(input = "http://service/BibliotequeVilleWS/connexionRequest", output = "http://service/BibliotequeVilleWS/connexionResponse")
    public boolean connexion(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "motdepasse", targetNamespace = "")
        String motdepasse);

    /**
     * 
     * @param datedebut
     * @param datefin
     * @param nom
     * @param prenom
     * @param titrelivre
     * @param email
     */
    @WebMethod
    @RequestWrapper(localName = "prolongerpret", targetNamespace = "http://service/", className = "client.Prolongerpret")
    @ResponseWrapper(localName = "prolongerpretResponse", targetNamespace = "http://service/", className = "client.ProlongerpretResponse")
    @Action(input = "http://service/BibliotequeVilleWS/prolongerpretRequest", output = "http://service/BibliotequeVilleWS/prolongerpretResponse")
    public void prolongerpret(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "titrelivre", targetNamespace = "")
        String titrelivre,
        @WebParam(name = "datedebut", targetNamespace = "")
        String datedebut,
        @WebParam(name = "datefin", targetNamespace = "")
        String datefin,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param titrelivre
     * @return
     *     returns client.Livre
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trouverlivre", targetNamespace = "http://service/", className = "client.Trouverlivre")
    @ResponseWrapper(localName = "trouverlivreResponse", targetNamespace = "http://service/", className = "client.TrouverlivreResponse")
    @Action(input = "http://service/BibliotequeVilleWS/trouverlivreRequest", output = "http://service/BibliotequeVilleWS/trouverlivreResponse")
    public Livre trouverlivre(
        @WebParam(name = "titrelivre", targetNamespace = "")
        String titrelivre);

    /**
     * 
     * @return
     *     returns java.util.List<client.Utilisateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://service/", className = "client.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://service/", className = "client.ListUserResponse")
    @Action(input = "http://service/BibliotequeVilleWS/listUserRequest", output = "http://service/BibliotequeVilleWS/listUserResponse")
    public List<Utilisateur> listUser();

    /**
     * 
     * @param motdepasse
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexionEquipe", targetNamespace = "http://service/", className = "client.ConnexionEquipe")
    @ResponseWrapper(localName = "connexionEquipeResponse", targetNamespace = "http://service/", className = "client.ConnexionEquipeResponse")
    @Action(input = "http://service/BibliotequeVilleWS/connexionEquipeRequest", output = "http://service/BibliotequeVilleWS/connexionEquipeResponse")
    public boolean connexionEquipe(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "motdepasse", targetNamespace = "")
        String motdepasse);

    /**
     * 
     * @return
     *     returns java.util.List<client.Pret>
     */
    @WebMethod(operationName = "ListPret")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListPret", targetNamespace = "http://service/", className = "client.ListPret")
    @ResponseWrapper(localName = "ListPretResponse", targetNamespace = "http://service/", className = "client.ListPretResponse")
    @Action(input = "http://service/BibliotequeVilleWS/ListPretRequest", output = "http://service/BibliotequeVilleWS/ListPretResponse")
    public List<Pret> listPret();

    /**
     * 
     * @param email
     * @param titrelivre
     */
    @WebMethod(operationName = "Retour")
    @RequestWrapper(localName = "Retour", targetNamespace = "http://service/", className = "client.Retour")
    @ResponseWrapper(localName = "RetourResponse", targetNamespace = "http://service/", className = "client.RetourResponse")
    @Action(input = "http://service/BibliotequeVilleWS/RetourRequest", output = "http://service/BibliotequeVilleWS/RetourResponse")
    public void retour(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "titrelivre", targetNamespace = "")
        String titrelivre);

}
